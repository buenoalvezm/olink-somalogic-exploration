---
title: "Human Disease Blood Atlas"
subtitle: "Disease reports"
author: "María Bueno Álvez"
date: last-modified
date-format: "YYYY-MM-DD"
format:
  html:
    self-contained: true
    theme: flatly
    title-block-banner: true
    smooth-scroll: true
    toc: true
    toc-depth: 4
    toc-location: right
    number-sections: true
    number-depth: 4
    code-fold: true
    code-tools: true
    code-copy: true
    code-overflow: wrap
    df-print: kable
    standalone: false
    fig-align: left
    figure:
      caption: "Figure {number}: {label}"
editor_options: 
  chunk_output_type: console
params:
  disease: "Psoriasis"
  control_diseases: list("Psoriatic arthritis", "Multiple sclerosis", "Myositis"," Rheumatoid arthritis", "Systemic sclerosis", "Vasculitis")
project:
  type: default
  output-dir: output_reports
execute:
  warning: false
---

```{r}
#| include: false

# Load any required setup
setwd("/Users/mariabueno/Library/CloudStorage/OneDrive-KTH/Repos/olink-somalogic-exploration")
source("scripts/functions/initialize.R")
source("scripts/functions/functions_visualization.R")
source("scripts/functions/functions_utility.R")


# Access the parameter
disease <- params$disease
diseases_background <- unlist(eval(parse(text = params$control_diseases)))
```

# Overview of `r params$disease` analyses

This report summarizes the plasma proteomics analyses for **`r disease`**,  based on both Olink HT and Somascan data.  

It includes data overview, differential expression analyses against multiple control groups, and cross-platform comparisons.

**Selected control diseases:** `r diseases_background`  
**Report generated on:** `r format(Sys.Date(), "%Y-%m-%d")`  
**Platform(s):** Olink & Somascan  
 
## Samples included in the analyses

```{r Plot number of samples}
#| fig-height: 8
#| fig-width: 8

# Identify all "other disease" samples (not the target disease or related controls)
id_other_controls_olink <- 
  manifest_common |> 
  filter(!Disease %in% c(disease, diseases_background),
  !Disease %in% c("Control", "Healthy", "Healthy control", "No cognitive impairment", "No diagnosis", "healthy"),
  !is.na(Disease)) |>
  distinct(DAid)

# Identify healthy samples 
id_healthy_olink <- 
  manifest_common |> 
  filter(Disease == "Healthy") |> 
  distinct(DAid)

# Combine relevant samples and assign group type labels
meta <- 
  manifest_common |> 
  filter(DAid %in% c(id_other_controls_olink$DAid, id_healthy_olink$DAid) | Disease %in% c(disease, diseases_background)) |> 
  mutate(Type = case_when(Disease == disease ~ "Disease", 
  Disease %in% diseases_background ~ "Related diseases",
  DAid %in% id_other_controls_olink$DAid ~ "Other diseases",
  DAid %in% id_healthy_olink$DAid ~ "Healthy",
  T ~"Other"
)) |> 
  mutate(Type = factor(Type, levels = rev(c("Disease", "Related diseases", "Other diseases", "Healthy"))))

# Summarize and visualize number of samples per group
dat_n <- 
  meta |> 
  count(Type, Disease) |>
  arrange(Type, n) 
  
dat_n |> 
  mutate(Disease = factor(Disease, levels = dat_n$Disease)) |> 
  ggplot(aes(Disease, n, fill = Type, color = Type)) +
  geom_col() +
  geom_text(aes(label = n, y = n + 10)) +
  coord_flip() +
  scale_color_manual(values = pal_type) +
  scale_fill_manual(values = pal_type) +
  theme_hpa() +
  xlab("") +
  ylab("Number of samples")
```

# Differential Abundance Analyses

This section summarizes the differential abundance (DA) analyses performed for `r disease` across both platforms. For each platform, three comparisons were performed:

- **(1) Disease vs Healthy controls** – to identify proteins specifically altered in the disease compared to healthy individuals.  
- **(2) Disease vs Related diseases** – to highlight disease-specific signals against a set of related conditions.  
- **(3) Disease vs Other diseases** – to capture disease-specific changes across the broader pan-disease context.  

::: {.callout-note}
**Note:** The "Healthy" control group used in these analyses is a mixture of samples from five different cohorts: PARD, ALS1, RHE1, TUB1, and VBE2.  
For Olink HT, additional healthy controls are available. 
However, these analyses are restricted to samples overlapping between Olink and Soma platforms to ensure consistency across datasets.
:::

**Volcano Plots** were generated for each comparison, and all differential abundance results were merged into a single data frame to enable downstream analyses and interactive exploration.

To illustrate the patterns of differential abundance, we highlight the **proteins with the largest absolute log fold change across the three comparisons**:

- **Heatmap:** Visualizes the top 20 proteins per comparison are shown across Healthy, Related diseases, and Other diseases.  
- **Boxplots:** Show individual protein distributions across all control groups and the disease of interest, summarized per disease class (target disease, related diseases, other diseases, healthy) and across individual groups.  

These examples allow **visual inspection of consistent and contrasting protein alterations**, supporting identification of potential biomarker candidates.

The following sections present the results separately for Olink and Somascan platforms.


## Olink 

```{r}
de_healthy_olink <- run_de_analysis(
  disease = disease,
  controls_label = "Healthy",
  manifest = manifest_common,
  data = data_ht_all,
  platform = "Olink",
  background = "Healthy"
)

de_related_olink <- run_de_analysis(
  disease = disease,
  controls_label = "Other diseases",
  manifest = manifest_common,
  data = data_ht_all,
  platform = "Olink",
  background = diseases_background
)

de_disease_olink <- run_de_analysis(
  disease = disease,
  controls_label = "Related diseases",
  manifest = manifest_common,
  data = data_ht_all,
  platform = "Olink",
  ids = id_other_controls_olink$DAid
)
```

### Volcano plots

```{r}
#| fig-height: 5
#| fig-width: 10

# Create volcano plots for each comparison
volcano_healthy_olink <- plot_volcano(de_healthy_olink, multiple = T, nrow = 2, cutoff = 0) + ggtitle("Healthy")
volcano_related_olink <- plot_volcano(de_related_olink, multiple = T, nrow = 2, cutoff = 0) + ggtitle("Related diseases")
volcano_disease_olink <- plot_volcano(de_disease_olink, multiple = T, nrow = 2, cutoff = 0) + ggtitle("Other diseases")

# Combine plots into one panel for visual comparison
volcano_healthy_olink + volcano_related_olink + volcano_disease_olink

# Merge all DE results into a single data frame
de_combined_olink <- 
  de_healthy_olink |> 
  bind_rows(de_related_olink) |> 
  bind_rows(de_disease_olink)
```

Interactive plot:

```{r}
plot_ly(
  de_combined_olink,
  x = ~logFC,
  y = ~-log10(adj.P.Val),
  color = ~sig,
  colors = pal_de,  
  text = ~Assay,
  type = "scatter",
  mode = "markers",
  frame = ~Control          
)
```

### Examples

We compare the **log fold change** in Olink HT data across comparisons.


```{r}
#| fig-height: 3
#| fig-width: 10

plot_de_heatmap(de_healthy = de_healthy_olink, de_related = de_related_olink, de_disease = de_disease_olink)
```

```{r}
#| fig-height: 12
#| fig-width: 10


top5_olink <- prepare_de_top(de_healthy_olink, de_related_olink, de_disease_olink)

p_summary <- 
  plot_de_boxplots(data_ht_all, 
                 top5_olink, 
                 platform = "Olink", 
                 mode = "summary")                

p_detailed <- 
  plot_de_boxplots(data_ht_all, 
                 top5_olink, 
                 platform = "Olink", 
                 mode = "detailed")                

p_summary + p_detailed +
  plot_layout(widths = c(1,3))
```

## Somascan

```{r}
de_healthy_soma <- run_de_analysis(
  disease = disease,
  controls_label = "Healthy",
  manifest = manifest_common,
  data = data_soma_all,
  platform = "Soma",
  background = "Healthy"
)|> 
  translate_soma()


de_related_soma <- run_de_analysis(
  disease = disease,
  controls_label = "Other diseases",
  manifest = manifest_common,
  data = data_soma_all,
  platform = "Soma",
  background = diseases_background
)|> 
  translate_soma()

de_disease_soma <- run_de_analysis(
  disease = disease,
  controls_label = "Related diseases",
  manifest = manifest_common,
  data = data_soma_all,
  platform = "Soma",
  ids = id_other_controls_olink$DAid
)|> 
  translate_soma()
```

### Volcano plots

```{r}
#| fig-height: 5
#| fig-width: 10

# Create volcano plots for each comparison
volcano_healthy_soma <- plot_volcano(de_healthy_soma, multiple = T, nrow = 2, cutoff = 0) + ggtitle("Healthy")
volcano_related_soma <- plot_volcano(de_related_soma, multiple = T, nrow = 2, cutoff = 0) + ggtitle("Related diseases")
volcano_disease_soma <- plot_volcano(de_disease_soma, multiple = T, nrow = 2, cutoff = 0) + ggtitle("Other disease")

# Combine plots into one panel for visual comparison
volcano_healthy_soma + volcano_related_soma + volcano_disease_soma

# Merge all DE results into a single data frame
de_combined_soma<- 
  de_healthy_soma |> 
  bind_rows(de_related_soma) |> 
  bind_rows(de_disease_soma)
```

Interactive plot:

```{r}
plot_ly(
  de_combined_soma,
  x = ~logFC,
  y = ~-log10(adj.P.Val),
  color = ~sig,
  colors = pal_de,   # fix typo
  text = ~Assay,
  type = "scatter",
  mode = "markers",
  frame = ~Control          # optional: animate by Control
)
```

### Examples

We compare the **log fold change** in Somascan 11K data data across comparisons.

```{r}
#| fig-height: 3
#| fig-width: 10

plot_de_heatmap(de_healthy = de_healthy_soma, de_related = de_related_soma, de_disease = de_disease_soma)
```
```{r}
#| fig-height: 12
#| fig-width: 10

top5_soma <- prepare_de_top(de_healthy_soma, de_related_soma, de_disease_soma)

p_summary <- 
  plot_de_boxplots(data_soma_all, 
                 top5_soma, 
                 platform = "Soma", 
                 meta_soma = meta_soma, 
                 mode = "summary")                

p_detailed <- 
  plot_de_boxplots(data_soma_all, 
                 top5_soma, 
                 platform = "Soma", 
                 meta_soma = meta_soma, 
                 mode = "detailed")                

p_summary + p_detailed +
  plot_layout(widths = c(1,3))
```
# Differential abundance overlap

To further explore the relationship between Olink HT and Somascan results, we quantified the overlap of **significantly differentially abundant proteins** across platforms and comparisons.   The resulting sets were visualized using an intersection (UpSet) plot, which summarizes the **number of shared and platform-specific significant proteins** across all comparisons.

Proteins appearing in multiple intersections may represent **robust, disease-relevant biomarkers** detectable by both technologies. Platform-specific signals that may reflect **assay design, detection chemistry**, or **platform sensitivity** differences.

```{r}
#| fig-height: 8
#| fig-width: 14

# Combine significant differential abundance results across platforms and comparisons
combined_list <- 
  
  map_df(
    list(de_related_soma,de_related_olink,de_healthy_soma,de_healthy_olink,de_disease_soma,de_disease_olink), function(df) {

      # Identify platform based on column name (SomaLogic has 'AptName')
 if("AptName" %in% colnames(df)) {
      df <- 
        df |> 
        mutate(Platform = "Somalogic")
    } else {
       df <- 
        df |> 
        mutate(Platform = "Olink")
    }

      # Keep only significant proteins and relevant metadat
  df <- 
    df |> 
    filter(sig != "not significant") |> 
    select(Assay, Control, Platform) |> 
    distinct()

})

combined_list |> 
  count(Control, Platform)

# Visualize overlap in significant proteins between platforms and comparisons
combined_list |>
  mutate(List = paste(Control, Platform, sep = " - ")) |> 
  group_by(Assay) |>
  summarise(List = list(unique(List))) |>
  ggplot(aes(x = List)) +
  geom_bar() +
  geom_text(stat = "count", aes(label = ..count..), vjust = -1) +
  scale_x_upset(n_intersections = 20) +
  theme_hpa()
```

# Cross-platform concordance

Finally, we assess the consistency of differntial abundance (DA) results across the two proteomic platforms, Olink HT and Somascan, for **overlapping proteins**.  

- **Scatter plots** show the relationship between statistical significance (−log₁₀ adjusted p-value) in Olink HT and Somascan. Points are colored by platform significance category (significant in both, Olink only, Soma only, or neither).
- **Bar plots** summarize the number of significantly altered proteins per comparison across the significance categories, highlighting the degree of agreement between the two platforms.

An interactive version of the scatter plot allows further exploration of individual proteins, with hover-over details showing gene symbol and comparison type.


```{r}
#| fig-height: 10
#| fig-width: 20

# Identify overlapping proteins
ht_assays <- 
  data_ht_all |> 
  distinct(Assay) |> 
  pull()

soma_assays <- 
  data_soma_all |> 
    left_join(meta_soma, by = c("Assay" = "AptName")) |> 
  distinct(EntrezGeneSymbol) |> 
  pull()

overlapping_assays <- intersect(ht_assays, soma_assays)

# Combine Olink and Somalogic differential expression results
all_combined <- 
  de_combined_olink |> 
  filter(Assay %in% overlapping_assays) |> 
  mutate(Platform = "Olink HT") |> 
  bind_rows(de_combined_soma |> 
  filter(Assay %in% overlapping_assays) |> 
  group_by(Control, Assay) |> 
  top_n(1, logFC) |> 
  mutate(Platform = "Somascan"))

all_combined_dat <- 
  all_combined |> 
  #filter(!AptName %in% c("seq.19590.46")) |> 
  select(Assay, adj.P.Val, Control, Platform) |> 
  mutate(adj.P.Val = -log10(adj.P.Val)) |> 
  pivot_wider(names_from = Platform, values_from = adj.P.Val) |> 
  mutate(Significance = case_when(`Olink HT` > -log10(0.05) & `Somascan` > -log10(0.05) ~ "Significant in both",
`Olink HT` > -log10(0.05) & `Somascan` < -log10(0.05) ~ "Significant in Olink",
`Olink HT` < -log10(0.05) & `Somascan` > -log10(0.05) ~ "Significant in Somalogic",
`Olink HT` < -log10(0.05) & `Somascan` < -log10(0.05) ~ "Not significant in both",
T ~"Other"
)) |> 
   mutate(
Control = factor(Control, levels = c("Healthy", "Related diseases", "Other diseases"))) 

# Generate scatterplot: compare significance in Olink and Somalogic datasets
plot_scatter <- 
  all_combined_dat|> 
  ggplot(aes(`Olink HT`, Somascan, color = Significance, text = Assay)) +
  geom_text_repel(aes(label = Assay), show.legend = F) +
  geom_point(alpha = 0.6) +
  scale_color_manual(values = pal_platform) +
  theme_hpa() +   
  facet_wrap(~Control, scales = "free") 

# Generate barplos: number of differentially expressed proteins per comparison
plot_barplot <- 
  all_combined_dat |> 
  group_by(Control) |>
  count(Significance) |> 
  mutate(Significance = factor(Significance, levels = names(rev(pal_platform)))) |> 
  filter(!is.na(Significance)) |> 
  ggplot(aes(Significance, n, fill = Significance, color = Significance)) +
  geom_col() +
  geom_text(aes(label = n, y = n + 200)) +
  facet_wrap(~Control) +
  scale_color_manual(values = pal_platform) +
  scale_fill_manual(values = pal_platform) +

  coord_flip() +
  xlab("") +
  theme_hpa()

# Combine plots
plot_scatter + plot_barplot +
 plot_layout(heights = c(2,1))
```

Interactive plot:

```{r}
plot_ly(
  all_combined_dat,
  x = ~`Olink HT`,
  y = ~Somascan,
  color = ~Significance,
  colors = pal_platform,   # fix typo
  text = ~Assay,
  type = "scatter",
  mode = "markers",
  frame = ~Control          # optional: animate by Control
)
```
