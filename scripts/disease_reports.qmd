---
title: "Human Disease Blood Atlas"
subtitle: "Disease reports"
author: "María Bueno Álvez"
date: last-modified
date-format: "YYYY-MM-DD"
format:
  html:
    self-contained: true
    theme: flatly
    title-block-banner: true
    smooth-scroll: true
    toc: true
    toc-depth: 4
    toc-location: right
    number-sections: true
    number-depth: 4
    code-fold: true
    code-tools: true
    code-copy: true
    code-overflow: wrap
    df-print: kable
    standalone: false
    fig-align: left
    figure:
      caption: "Figure {number}: {label}"
editor_options: 
  chunk_output_type: console
params:
  disease: "Amyotrophic Lateral Sclerosis"
  control_diseases: list("PD","Multiple sclerosis","Bipolar disorder","Schizophrenia")
project:
  type: default
  output-dir: output_reports
execute:
  warning: false
---

```{r}
#| include: false

# Load any required setup
library(tidyverse)
setwd("/Users/mariabueno/Library/CloudStorage/OneDrive-KTH/Repos/olink-somalogic-exploration")
source("scripts/initialize.R")

# Access the parameter
disease <- params$disease
#diseases_background <- params$control_diseases
diseases_background <- unlist(eval(parse(text = params$control_diseases)))
```

# Overview of `r params$disease` analyses

Running analysis for: **`r disease`**

Selected control diseases: **`r diseases_background`**

```{r Plot number of samples}
#| fig-height: 8
#| fig-width: 8

# Prep meta
id_other_controls_olink <- 
  manifest_common |> 
  filter(!Disease %in% c(disease, diseases_background),
  !Disease %in% c("Control", "Healthy", "Healthy control", "No cognitive impairment", "No diagnosis", "healthy"),
  !is.na(Disease)) |>
  distinct(DAid)

id_healthy_olink <- 
  manifest_common |> 
  filter(Cohort == "SCAP"| Disease == disease) |> 
  distinct(DAid)

meta <- 
  manifest_common |> 
  filter(DAid %in% c(id_other_controls_olink$DAid, id_healthy_olink$DAid) | Disease %in% c(disease, diseases_background)) |> 
  mutate(Type = case_when(Disease == disease ~ "Disease", 
  Disease %in% diseases_background ~ "Related diseases",
  DAid %in% id_other_controls_olink$DAid ~ "Other diseases",
  DAid %in% id_healthy_olink$DAid ~ "Healthy",
  T ~"Other"
)) |> 
  mutate(Type = factor(Type, levels = rev(c("Disease", "Related diseases", "Other diseases", "Healthy"))))

dat_n <- 
  meta |> 
  count(Type, Disease) |>
  arrange(Type, n) 
  
dat_n |> 
  mutate(Disease = factor(Disease, levels = dat_n$Disease)) |> 
  ggplot(aes(Disease, n, fill = Type, color = Type)) +
  geom_col() +
  geom_text(aes(label = n, y = n + 10)) +
  coord_flip() +
  scale_color_manual(values = pal_type) +
  scale_fill_manual(values = pal_type) +
  theme_hpa() +
  xlab("") +
  ylab("Number of samples")
```

# Differential abundance analyses

## Olink 

```{r}
# Healthy comparison
# meta_healthy_olink <- 
#   manifest_olink |> 
#   filter(Cohort == "SCAP") |> 
#   select(DAid, Age, Sex, BMI, Disease) |> 
#   bind_rows(manifest_common |> 
#   filter(Disease == disease) |> 
#   select(DAid, Age, Sex, BMI, Disease))

meta_healthy_olink <- 
  manifest_common |> 
  filter(Disease %in% c(disease, "Healthy"))

data_healthy_olink <- 
  data_ht_all |> 
  select(-DAid_batch, -Batch, -LOD, -OlinkID) |> 
  filter(DAid %in% meta_healthy_olink$DAid) |> 
  pivot_wider(names_from = Assay, values_from = NPX)

de_healthy_olink <-     
    do_limma_disease(data_wide = data_healthy_olink,
                     metadata = meta_healthy_olink,
                     disease = disease,
                     controls = "Healthy",
                     correct = F,
                     cutoff = 0) 

# Related diseases
meta_cancer_olink <- 
  manifest_common |> 
  filter(Disease %in% c(diseases_background, disease)) |> 
  select(DAid, Age, Sex, BMI, Disease)

data_cancer_olink <- 
  data_ht_all |> 
  select(-DAid_batch, -Batch, -LOD, -OlinkID) |> 
  filter(DAid %in% meta_cancer_olink$DAid) |> 
  pivot_wider(names_from = Assay, values_from = NPX)

de_cancer_olink <-     
    do_limma_disease(data_wide = data_cancer_olink,
                     metadata = meta_cancer_olink,
                     disease = disease,
                     controls = "Other diseases",
                     correct = F,
                     cutoff = 0) 

# Pan-disease comparison
meta_disease_olink <- 
  manifest_common |> 
  filter(DAid %in% unique(id_other_controls_olink$DAid) | Disease == disease) |> 
  select(DAid, Age, Sex, BMI, Disease)

data_disease_olink <- 
  data_ht_all |> 
  select(-DAid_batch, -Batch, -LOD, -OlinkID) |> 
  filter(DAid %in% meta_disease_olink$DAid) |> 
  pivot_wider(names_from = Assay, values_from = NPX)

de_disease_olink <-     
    do_limma_disease(data_wide = data_disease_olink,
                     metadata = meta_disease_olink,
                     disease = disease,
                     controls = "Related diseases",
                     correct = F,
                     cutoff = 0) 
```

### Volcano plots

```{r}
#| fig-height: 5
#| fig-width: 10

volcano_healthy_olink <- plot_volcano(de_healthy_olink, multiple = T, nrow = 2, cutoff = 0) + ggtitle("Healthy")
volcano_cancer_olink <- plot_volcano(de_cancer_olink, multiple = T, nrow = 2, cutoff = 0) + ggtitle("Related diseases")
volcano_disease_olink <- plot_volcano(de_disease_olink, multiple = T, nrow = 2, cutoff = 0) + ggtitle("Other diseases")

# volcano_healthy_olink_plotly <- ggplotly(volcano_healthy_olink, tooltip = c("Assay"))
# volcano_cancer_olink_plotly <- ggplotly(volcano_cancer_olink, tooltip = c("Assay"))
# volcano_disease_olink_plotly <- ggplotly(volcano_disease_olink, tooltip = c("Assay"))

volcano_healthy_olink + volcano_cancer_olink + volcano_disease_olink
#volcano_healthy_olink_plotly + volcano_cancer_olink_plotly + volcano_disease_olink_plotly

#ggsave(paste0("results/de_", disease, "_Olink.png"), h = 5, w = 12)
de_combined_olink <- 
  de_healthy_olink |> 
  bind_rows(de_cancer_olink) |> 
  bind_rows(de_disease_olink)

```

Interactive plot:

```{r}
plot_ly(
  de_combined_olink,
  x = ~logFC,
  y = ~-log10(adj.P.Val),
  color = ~sig,
  colors = pal_de,   # fix typo
  text = ~Assay,
  type = "scatter",
  mode = "markers",
  frame = ~Control          # optional: animate by Control
)
```

### Examples

We compare the **log fold change** in Olink HT data across comparisons.

```{r}
#| fig-height: 3
#| fig-width: 10

de_combined_olink <- 
  de_healthy_olink |> 
  bind_rows(de_cancer_olink) |> 
  bind_rows(de_disease_olink)

top_assays <- 
  de_combined_olink |> 
  group_by(Control) |> 
  top_n(20, abs(logFC)) |> 
  ungroup() |> 
  distinct(Assay)

my_palette <- colorRampPalette(c("white", "#DDC49C", "red"))(100)

de_combined_olink |>
  filter(Assay %in% top_assays$Assay) |> 
  select(Assay, logFC, Control) |> 
  pivot_wider(names_from = Control, values_from = logFC) |> 
  column_to_rownames("Assay") |> 
  t() |> 
  pheatmap(color = my_palette) 
#ggsave(paste0("results/de_pheatmap_", disease, "_Olink.png"), h = 8, w = 5)
```

```{r}
#| fig-height: 12
#| fig-width: 10

top_5 <- 
  de_combined_olink |>
  filter(Assay %in% top_assays$Assay) |> 
  select(Assay, logFC, Control) |> 
  pivot_wider(names_from = Control, values_from = logFC) |> 
  mutate(rank_healthy = rank(-Healthy),
rank_disease = rank(-`Other diseases`),
rank_cancer = rank(-`Related diseases`)) |> 
  group_by_all() |> 
mutate(sum_rank = sum(rank_healthy, rank_cancer, rank_disease)) |> 
  arrange(sum_rank) |> 
  head(5)

cancer_controls <- 
  manifest_common |> 
  filter(Disease %in% diseases_background,
  Disease != disease) |> 
  distinct(Disease) |> 
  pull()

disease_controls <- 
  manifest_common |> 
  filter(DAid %in% id_other_controls_olink$DAid) |> 
  distinct(Disease) |> 
  pull()


levels <- c(disease, "Healthy", cancer_controls, disease_controls)
#pal_controls <- c(disease = "darkred", "Healthy" = "grey", "Pan-cancer controls" = "#DDC49C", "Pan-disease controls" = "#99B2A6")

manifest_common_controls <- 
  manifest_common |> 
  mutate(Type = case_when(Disease == disease ~ "Disease",
  Disease == "Healthy" ~ Disease,
Disease %in% cancer_controls ~ "Related diseases",
Disease %in% disease_controls ~ "Other diseases",
T ~"Other"
)) |> 
  mutate(Disease = factor(Disease, levels = unique(c(disease, "Healthy", cancer_controls, disease_controls))))


p_summary <- 
  data_ht_all |>
      filter(Assay %in% top_5$Assay,
      DAid %in% manifest_common$DAid) |>
      select(DAid, Assay, NPX) |>
      left_join(manifest_common_controls |>
                  select(DAid, Disease, Type),
                by = "DAid") |>
    mutate(Disease = factor(Disease, levels = unique(c(disease, "Healthy", cancer_controls, disease_controls))),
    Assay = factor(Assay, levels = top_5$Assay)) |> 
filter(!is.na(Disease)) |> 
        ggplot(aes(Type,
                   NPX,
                   fill = Type,
                   color = Type)) +
        geom_quasirandom(alpha = 0.7, show.legend = F
) +
        geom_boxplot(
          alpha = 0.3,
          outlier.color = NA,
          color = "grey20",
          show.legend = F
        ) +
 scale_color_manual(
    values = pal_type,
    na.value = "darkred")  +
 scale_fill_manual(
    values = pal_type,
    na.value = "darkred") +  
  facet_wrap( ~ Assay, scales = "free_y", ncol = 1) +
        theme_hpa(angled = T) +
        xlab("") 

p_detailed <- 
  data_ht_all |>
      filter(Assay %in% top_5$Assay,
      DAid %in% manifest_common$DAid) |>
      select(DAid, Assay, NPX) |>
      left_join(manifest_common_controls |>
                  select(DAid, Disease, Type),
                by = "DAid") |>
    mutate(Disease = factor(Disease, levels = unique(c(disease, "Healthy", cancer_controls, disease_controls))),
    Assay = factor(Assay, levels = top_5$Assay)) |> filter(!is.na(Disease)) |> 
        ggplot(aes(Disease,
                   NPX,
                   fill = Type,
                   color = Type)) +
        geom_quasirandom(alpha = 0.7
) +
        geom_boxplot(
          alpha = 0.3,
          outlier.color = NA,
          color = "grey20",
          show.legend = F
        ) +
 scale_color_manual(
    values = pal_type,
    na.value = "darkred")  +
 scale_fill_manual(
    values = pal_type,
    na.value = "darkred") +  
  facet_wrap( ~ Assay, scales = "free_y", ncol = 1) +
        theme_hpa(angled = T) +
        xlab("") 

p_summary + p_detailed +
  plot_layout(widths = c(1,3))
#/de_examples_", disease, "_Olink.png"), h = 10, w = 10)
```

## Somalogic

```{r}
meta_healthy_soma <- 
  manifest_common |> 
  filter(Disease %in% c(disease, "Healthy")) |> 
  select(DAid, Age, Sex, BMI, Disease)

data_healthy_soma <- 
  data_soma_all |> 
  filter(DAid %in% meta_healthy_soma$DAid) |> 
  pivot_wider(names_from = Assay, values_from = RFU)

de_healthy_soma <-     
    do_limma_disease(data_wide = data_healthy_soma,
                     metadata = meta_healthy_soma,
                     disease = disease,
                     controls = "Healthy",
                     correct = F,
                     cutoff = 0) |> 
  translate_soma()


data_cancer_soma <- 
   data_soma_all |> 
  filter(DAid %in% meta_cancer_olink$DAid) |> 
  pivot_wider(names_from = Assay, values_from = RFU)

de_cancer_soma<-     
    do_limma_disease(data_wide = data_cancer_soma,
                     metadata = meta_cancer_olink,
                     disease = disease,
                     controls = "Related diseases",
                     correct = F,
                     cutoff = 0) |> 
  translate_soma()

meta_disease_soma <- 
  manifest_common |> 
  filter(DAid %in% unique(id_other_controls_olink$DAid) | Disease == disease) |> 
  select(DAid, Age, Sex, BMI, Disease)

data_disease_soma <- 
  data_soma_all |> 
  filter(DAid %in% meta_disease_soma$DAid) |> 
  pivot_wider(names_from = Assay, values_from = RFU)

de_disease_soma <-     
    do_limma_disease(data_wide = data_disease_soma,
                     metadata = meta_disease_soma,
                     disease = disease,
                     controls = "Other diseases",
                     correct = F,
                     cutoff = 0) |> 
  translate_soma()
```

### Volcano plots

```{r}
#| fig-height: 5
#| fig-width: 10

volcano_healthy_soma <- plot_volcano(de_healthy_soma, multiple = T, nrow = 2, cutoff = 0) + ggtitle("Healthy")
volcano_cancer_soma <- plot_volcano(de_cancer_soma, multiple = T, nrow = 2, cutoff = 0) + ggtitle("Pan-cancer")
volcano_disease_soma <- plot_volcano(de_disease_soma, multiple = T, nrow = 2, cutoff = 0) + ggtitle("Pan-disease")

volcano_healthy_soma + volcano_cancer_soma + volcano_disease_soma
 #ggsave(paste0("results/de_", disease, "_Soma.png"), h = 5, w = 12)

de_combined_soma<- 
  de_healthy_soma |> 
  bind_rows(de_cancer_soma) |> 
  bind_rows(de_disease_soma)
```

Interactive plot:

```{r}
plot_ly(
  de_combined_soma,
  x = ~logFC,
  y = ~-log10(adj.P.Val),
  color = ~sig,
  colors = pal_de,   # fix typo
  text = ~Assay,
  type = "scatter",
  mode = "markers",
  frame = ~Control          # optional: animate by Control
)
```

### Examples

We compare the **log fold change** in Somascan 11K data data across comparisons.

```{r}
#| fig-height: 3
#| fig-width: 10
#| 
de_combined_soma<- 
  de_healthy_soma |> 
  bind_rows(de_cancer_soma) |> 
  bind_rows(de_disease_soma)

top_assays <- 
  de_combined_soma |> 
  group_by(Control) |> 
  top_n(20, abs(logFC)) |> 
  ungroup() |> 
  distinct(Assay)

my_palette <- colorRampPalette(c("white", "#DDC49C", "red"))(100)

de_combined_soma |>
  filter(Assay %in% top_assays$Assay) |> 
  group_by(Assay, Control) |> 
  top_n(1, logFC) |> 
  select(Assay, logFC, Control) |> 
  pivot_wider(names_from = Control, values_from = logFC) |> 
  column_to_rownames("Assay") |> 
  t() |> 
  pheatmap() 

# ggsave(paste0("results/de_pheatmap_", disease, "_Soma.png"), h = 8, w = 5)
```
```{r}
#| fig-height: 12
#| fig-width: 10

top_5 <- 
  de_combined_soma |>
  filter(Assay %in% top_assays$Assay) |>
   group_by(Assay, Control) |> 
  top_n(1, logFC) |> 
  select(Assay, logFC, Control) |> 
  pivot_wider(names_from = Control, values_from = logFC) |> 
  mutate(rank_healthy = rank(-Healthy),
rank_disease = rank(-`Other diseases`),
rank_cancer = rank(-`Related diseases`)) |> 
  group_by_all() |> 
mutate(sum_rank = sum(rank_healthy, rank_cancer, rank_disease)) |> 
  arrange(sum_rank) |> 
  head(5)

cancer_controls <- 
  manifest_common |> 
  filter(Disease %in% diseases_background,
  Disease != disease) |> 
  distinct(Disease) |> 
  pull()

disease_controls <- 
  manifest_common |> 
  filter(DAid %in% id_other_controls_olink$DAid) |> 
  distinct(Disease) |> 
  pull()




# manifest_soma_controls <- 
#   manifest_soma |> 
#   mutate(Type = case_when(Disease == disease ~ Disease,
#   Disease == "Healthy" ~ Disease,
# Disease %in% cancer_controls ~ "Pan-cancer controls",
# Disease %in% disease_controls ~ "Pan-disease controls")) |> 
#   mutate(Disease = factor(Disease, levels = c(disease, "Healthy", cancer_controls, disease_controls)))

# data_soma_all |>
#       filter(EntrezGeneSymbol %in% top_5$Assay,
#       DAid %in% manifest_soma$DAid) |>
#       select(DAid, EntrezGeneSymbol, (RFU)) |>
#       left_join(manifest_soma_controls |>
#                   select(DAid, Disease, Type),
#                 by = "DAid") |>
#     mutate(Disease = factor(Disease, levels = c(disease, "Healthy", cancer_controls, disease_controls))) |> 
# filter(!is.na(Disease)) |> 
#         ggplot(aes(Disease,
#                    log2(RFU),
#                    fill = Type,
#                    color = Type)) +
#         geom_quasirandom(alpha = 0.7
# ) +
#         geom_boxplot(
#           alpha = 0.3,
#           outlier.color = NA,
#           color = "grey20",
#           show.legend = F
#         ) +
#  scale_color_manual(
#     values = pal_controls,
#     na.value = "darkred")  +
#  scale_fill_manual(
#     values = pal_controls,
#     na.value = "darkred") +  
#   facet_wrap(~EntrezGeneSymbol, scales = "free_y", ncol = 1) +
#         theme_hpa(angled = T) +
#         xlab("") 

# ggsave(paste0("results/de_examples_", disease, "_Soma.png"), h = 10, w = 10)

dat_soma <- 
   data_soma_all |>
  left_join(meta_soma, by = c("Assay" = "AptName")) |> 
      filter(EntrezGeneSymbol %in% top_5$Assay,
      DAid %in% manifest_common$DAid) |>
      select(DAid, EntrezGeneSymbol, Assay, (RFU)) |>
      left_join(manifest_common_controls |>
                  select(DAid, Disease, Type),
                by = "DAid") |>
    mutate(Disease = factor(Disease, levels = unique(c(disease, "Healthy", cancer_controls, disease_controls))),
    EntrezGeneSymbol = factor(EntrezGeneSymbol, levels = top_5$Assay)) |> 
filter(!is.na(Disease)) |> 
mutate(Assay_Protein = paste(EntrezGeneSymbol, Assay, sep = " - ")) 

assay_order <- 
  dat_soma |> 
  distinct(Assay, EntrezGeneSymbol, Assay_Protein) |> 
  arrange(EntrezGeneSymbol)

p_summary <- 
  dat_soma |> 
  mutate(Assay_Protein = factor(Assay_Protein, levels = assay_order$Assay_Protein)) |> 
        ggplot(aes(Type,
                   RFU,
                   fill = Type,
                   color = Type)) +
        geom_quasirandom(alpha = 0.7, show.legend = F
) +
        geom_boxplot(
          alpha = 0.3,
          outlier.color = NA,
          color = "grey20",
          show.legend = F
        ) +
 scale_color_manual(
    values = pal_type,
    na.value = "darkred")  +
 scale_fill_manual(
    values = pal_type,
    na.value = "darkred") +  
  facet_wrap( ~ Assay_Protein, scales = "free_y", ncol = 1) +
        theme_hpa(angled = T) +
        xlab("") 

p_detailed <- 
    dat_soma |> 
  mutate(Assay_Protein = factor(Assay_Protein, levels = assay_order$Assay_Protein)) |> 
        ggplot(aes(Disease,
                   RFU,
                   fill = Type,
                   color = Type)) +
        geom_quasirandom(alpha = 0.7, show.legend = F
) +
        geom_boxplot(
          alpha = 0.3,
          outlier.color = NA,
          color = "grey20",
          show.legend = F
        ) +
 scale_color_manual(
    values = pal_type,
    na.value = "darkred")  +
 scale_fill_manual(
    values = pal_type,
    na.value = "darkred") +  
  facet_wrap( ~ Assay_Protein, scales = "free_y", ncol = 1) +
        theme_hpa(angled = T) +
        xlab("") 

p_summary + p_detailed +
  plot_layout(widths = c(1,3))
#/de_examples_", disease, "_Olink.png"), h = 10, w = 10)
```
# Overlap

```{r}
#| fig-height: 8
#| fig-width: 14
#| 
combined_list <- 
  map_df(list(de_cancer_soma,de_cancer_olink,de_healthy_soma,de_healthy_olink,de_disease_soma,de_disease_olink), function(df) {

 if("AptName" %in% colnames(df)) {
      df <- 
        df |> 
        mutate(Platform = "Somalogic")
    } else {
       df <- 
        df |> 
        mutate(Platform = "Olink")
    }


  df <- 
    df |> 
    filter(sig != "not significant") |> 
    select(Assay, Control, Platform) |> 
    distinct()

})

combined_list |> 
  count(Control, Platform)


combined_list |>
  mutate(List = paste(Control, Platform, sep = " - ")) |> 
  group_by(Assay) |>
  summarise(List = list(unique(List))) |>
  ggplot(aes(x = List)) +
  geom_bar() +
  geom_text(stat = "count", aes(label = ..count..), vjust = -1) +
  scale_x_upset(n_intersections = 20) +
  theme_hpa()

```
# Comparison


```{r}
#| fig-height: 10
#| fig-width: 20

# Overlapping proteins
ht_assays <- 
  data_ht_all |> 
  distinct(Assay) |> 
  pull()

soma_assays <- 
  data_soma_all |> 
    left_join(meta_soma, by = c("Assay" = "AptName")) |> 
  distinct(EntrezGeneSymbol) |> 
  pull()

overlapping_assays <- intersect(ht_assays, soma_assays)
#length(overlapping_assays)

all_combined <- 
  de_combined_olink |> 
  filter(Assay %in% overlapping_assays) |> 
  mutate(Platform = "Olink HT") |> 
  bind_rows(de_combined_soma |> 
  filter(Assay %in% overlapping_assays) |> 
  group_by(Control, Assay) |> 
  top_n(1, logFC) |> 
  mutate(Platform = "Somascan"))

all_combined_dat <- 
  all_combined |> 
  filter(!AptName %in% c("seq.19590.46")) |> 
  select(Assay, adj.P.Val, Control, Platform) |> 
  mutate(adj.P.Val = -log10(adj.P.Val)) |> 
  #group_by(Assay, Control, Platform) |> 
  #top_n(1, adj.P.Val) |> ungroup() |> 
  pivot_wider(names_from = Platform, values_from = adj.P.Val) |> 
  mutate(Significance = case_when(`Olink HT` > -log10(0.05) & `Somascan` > -log10(0.05) ~ "Significant in both",
`Olink HT` > -log10(0.05) & `Somascan` < -log10(0.05) ~ "Significant in Olink",
`Olink HT` < -log10(0.05) & `Somascan` > -log10(0.05) ~ "Significant in Somalogic",
`Olink HT` < -log10(0.05) & `Somascan` < -log10(0.05) ~ "Not significant in both",
T ~"Other"
)) |> 
   mutate(
Control = factor(Control, levels = c("Healthy", "Related diseases", "Other diseases"))) 



pal_platform <- c ("Significant in both" = "#322F81",
"Significant in Olink" = "#4CC5F3",
                  "Significant in Somalogic" = "#EC038A",
                 "Not significant in both" = "grey") #322F81


plot_scatter <- 
  all_combined_dat|> 
  ggplot(aes(`Olink HT`, Somascan, color = Significance, text = Assay)) +
  geom_text_repel(aes(label = Assay), show.legend = F) +
  geom_point(alpha = 0.6) +
  scale_color_manual(values = pal_platform) +
  theme_hpa() +   
  facet_wrap(~Control, scales = "free") 

#plotly_scatter <- ggplotly(plot_scatter, tooltip = c("Assay"))
#plotly_scatter <- ggiraph::girafe(plot_scatter)

plot_barplot <- 
  all_combined_dat |> 
  group_by(Control) |>
  count(Significance) |> 
  mutate(Significance = factor(Significance, levels = names(rev(pal_platform)))) |> 
  filter(!is.na(Significance)) |> 
  ggplot(aes(Significance, n, fill = Significance, color = Significance)) +
  geom_col() +
  geom_text(aes(label = n, y = n + 200)) +
  facet_wrap(~Control) +
  scale_color_manual(values = pal_platform) +
  scale_fill_manual(values = pal_platform) +

  coord_flip() +
  xlab("") +
  theme_hpa()



plot_scatter + plot_barplot +
 plot_layout(heights = c(2,1))

```

Interactive plot:

```{r}
plot_ly(
  all_combined_dat,
  x = ~`Olink HT`,
  y = ~Somascan,
  color = ~Significance,
  colors = pal_platform,   # fix typo
  text = ~Assay,
  type = "scatter",
  mode = "markers",
  frame = ~Control          # optional: animate by Control
)
```


```{r}

# data_soma_all |> 
#  filter(grepl("D-dimer", Target)) |> 
#  distinct(Assay, Target, EntrezGeneSymbol)
# data_soma_all |> filter(EntrezGeneSymbol == "CFHR5") |> 
#   left_join(manifest, by = "DAid") |> 
#   filter(!is.na(Disease)) |> 
#  # filter(Disease %in% c("Acute venous thromboembolism", "Healthy", "Acute COVID")) |> 
#  # filter(Disease %in% c("Healthy", "Myositis", "Rheumatoid arthritis", "Systemic sclerosis", "Vasculitis")) |> 
#   ggplot(aes(Disease, log2(RFU))) +
#   geom_quasirandom(aes(color = Sex)) +
#   geom_boxplot(fill = NA, outlier.color = NA) +
#   facet_wrap(~Assay, ncol = 1) +
#   theme_hpa(angled = T)

# proteins <- c("GP1BA", "S100A12", "IL6", "SELP", "CFHR5", "TFPI2")
# proteins <- c("NOS3", "TIA1", "LTA4H", "APOL1", "NDUFS6", "KLK4", "CCL21", "SERPINA9","RERG", "CXCL13", "CCL7")

# data_soma_all |> 
#   left_join(meta_soma, by = c("Assay" = "AptName")) |> 
# # filter(grepl("D-dimer", Target)) |> 
#  #distinct(Assay, Target, EntrezGeneSymbol)
#   filter(EntrezGeneSymbol %in% proteins) |> 
#   left_join(manifest, by = "DAid") |> 
#   mutate(Assay = paste0(EntrezGeneSymbol, " - ", Assay),
# Disease = factor(Disease, levels = disease_levels)) |> 
# filter(!is.na(Disease)) |> 
#  # filter(Disease %in% c("Acute venous thromboembolism", "Healthy", "Acute COVID")) |> 
#  # filter(Disease %in% c("Healthy", "Myositis", "Rheumatoid arthritis", "Systemic sclerosis", "Vasculitis")) |> 
#   ggplot(aes(Disease, RFU)) +
#   geom_quasirandom(aes(color = Class)) +
#   geom_boxplot(fill = NA, outlier.color = NA) +
#   scale_color_manual(values = pal_class) +
#   facet_wrap(~Assay, ncol = 1, scales = "free_y") +
#   theme_hpa(angled = T)

# ggsave(savepath("Emil_soma_proteins.pdf"), h = 18, w = 8)
# ggsave(savepath("Josefin_soma_proteins.pdf"), h = 22, w = 8)

```



```{r}
# plot_data <- 
#   data_soma_all |>
#   left_join(meta_soma, by = c("Assay" = "AptName")) |>
#   left_join(manifest_common, by = "DAid") |> 
#   filter(DAid %in% manifest_common$DAid) |>
#   select(DAid, EntrezGeneSymbol, Disease, Class, RFU) |>
#   mutate(Disease = factor(Disease, levels = c(disease, "Healthy", cancer_controls, disease_controls)),
#          EntrezGeneSymbol = factor(EntrezGeneSymbol, levels = top_5$Assay)) |>
#   filter(!is.na(Disease))

# plot_ly(
#   plot_data,
#   x = ~Disease,
#   y = ~RFU,
#   color = ~Class,
#   colors = pal_class,
#   type = "box",
#   boxpoints = "all",
#   jitter = 0.5,
#   pointpos = 0,
#   marker = list(opacity = 0.7),
#   line = list(color = "grey20"),
#   transforms = list(
#     list(
#       type = 'filter',
#       target = ~EntrezGeneSymbol,
#       operation = '=',
#       value = levels(plot_data$EntrezGeneSymbol)[1]   # default protein shown
#     )
#   )
# ) %>%
#   layout(
#     updatemenus = list(
#       list(
#         type = "dropdown",
#         direction = "down",
#         showactive = TRUE,
#         active = 0,
#         buttons = lapply(levels(plot_data$EntrezGeneSymbol), function(prot) {
#           list(
#             method = "restyle",
#             args = list("transforms[0].value", list(prot)),
#             label = prot
#           )
#         }),
#         # 🔑 make dropdown searchable
#         x = 0.1, y = 1.15,
#         pad = list(r = 10, t = 10),
#         name = "Protein",
#         showarrow = FALSE
#       )
#     ),
#     yaxis = list(title = "RFU"),
#     xaxis = list(title = "", tickangle = -45)
#   )

```